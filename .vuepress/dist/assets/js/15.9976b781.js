(window.webpackJsonp=window.webpackJsonp||[]).push([[15],{366:function(t,a,s){"use strict";s.r(a);var e=s(44),n=Object(e.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"verification"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#verification"}},[t._v("#")]),t._v(" Verification")]),t._v(" "),s("p"),s("div",{staticClass:"table-of-contents"},[s("ul",[s("li",[s("a",{attrs:{href:"#manually-verify"}},[t._v("Manually Verify")])]),s("li",[s("a",{attrs:{href:"#verify-in-queue"}},[t._v("Verify in Queue")])]),s("li",[s("a",{attrs:{href:"#verify-in-cron"}},[t._v("Verify in CRON")])])])]),s("p"),t._v(" "),s("p",[t._v("It might happen that many time you customer will be redirected to the PayU payment gateway and they successfully paid but somehow due to network issue they did not return to the Capture Page.")]),t._v(" "),s("p",[t._v("This might lead to the transactions stuck in "),s("code",[t._v("PENDING")]),t._v(" state but in reality they should be successful. Best user experience would be to automatically verify the transaction, rather than the user contacting the back office team and manually verify the transaction.")]),t._v(" "),s("h2",{attrs:{id:"manually-verify"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#manually-verify"}},[t._v("#")]),t._v(" Manually Verify")]),t._v(" "),s("div",{staticClass:"language-php extra-class"},[s("pre",{pre:!0,attrs:{class:"language-php"}},[s("code",[s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$invoice")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" Invoice"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("find")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Get the transactions that are pending.")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$transactions")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$invoice")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("transactions")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("pending")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("get")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Verify Now")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$transactions")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),s("span",{pre:!0,attrs:{class:"token property"}},[t._v("each")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("verify")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("p",[t._v("Even if there are 2 "),s("code",[t._v("PENDING")]),t._v(" transactions and they are from different Gateways one from "),s("code",[t._v("PayuBiz")]),t._v(" one from "),s("code",[t._v("PayuMoney")]),t._v(" it can successfully verify them both.")]),t._v(" "),s("h2",{attrs:{id:"verify-in-queue"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#verify-in-queue"}},[t._v("#")]),t._v(" Verify in Queue")]),t._v(" "),s("p",[t._v("If you want to verify the transaction in a queue then you just have to dispatch the job Laravel PayU provides out of the box.")]),t._v(" "),s("div",{staticClass:"language-php extra-class"},[s("pre",{pre:!0,attrs:{class:"language-php"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("use")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token package"}},[t._v("Tzsk"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("Payu"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("Jobs"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("VerifyTransaction")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$transactions")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("each")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("fn "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$transaction")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" VerifyTransaction"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("dispatch")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$transaction")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("p",[t._v("Or better yet,")]),t._v(" "),s("div",{staticClass:"language-php extra-class"},[s("pre",{pre:!0,attrs:{class:"language-php"}},[s("code",[s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$transactions")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),s("span",{pre:!0,attrs:{class:"token property"}},[t._v("each")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("verifyAsync")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("div",{staticClass:"custom-block tip"},[s("p",{staticClass:"custom-block-title"},[t._v("When to Dispatch")]),t._v(" "),s("p",[t._v("Best solution is when the user visits the Order Detail which is still in pending status. You can dispatch the job right then so that it can go ahead and verify on demand.")])]),t._v(" "),s("p",[t._v("You can easily check if a Transaction is verified or not by calling "),s("code",[t._v("$transaction->verified()")]),t._v(" method. This will return boolean depending on the verification status.")]),t._v(" "),s("p",[s("strong",[t._v("Remember:")]),t._v(" A failed transaction can also be Verified. Verified doesn't mean it is successful.")]),t._v(" "),s("h2",{attrs:{id:"verify-in-cron"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#verify-in-cron"}},[t._v("#")]),t._v(" Verify in CRON")]),t._v(" "),s("p",[t._v("If you think about it, this is actually the practical solution. Cause the customer never returned to your application after payment that's why there is this issue of Transactions Stuck in "),s("code",[t._v("PENDING")]),t._v(" state. So the best solution is to add it in a scheduled task for every 15 mins.")]),t._v(" "),s("p",[t._v("Laravel PayU has you covered in this area as well. It comes with a verification command out of the box. Just add this line in the "),s("code",[t._v("schedule")]),t._v(" method of your "),s("code",[t._v("console/Kernel.php")]),t._v(".")]),t._v(" "),s("div",{staticClass:"language-php extra-class"},[s("pre",{pre:!0,attrs:{class:"language-php"}},[s("code",[s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$schedule")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("command")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token single-quoted-string string"}},[t._v("'payu:verify'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("everyFifteenMinutes")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("div",{staticClass:"custom-block tip"},[s("p",{staticClass:"custom-block-title"},[t._v("Status List to Verify")]),t._v(" "),s("p",[t._v("You can specify which status of the transaction needs to be verified in the payu config file. "),s("code",[t._v("verify")]),t._v(" key. By default it is set to "),s("code",[t._v("PayuTransaction::STATUS_PENDING")]),t._v(".")])])])}),[],!1,null,null,null);a.default=n.exports}}]);