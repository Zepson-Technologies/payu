(window.webpackJsonp=window.webpackJsonp||[]).push([[11],{362:function(a,t,s){"use strict";s.r(t);var n=s(44),e=Object(n.a)({},(function(){var a=this,t=a.$createElement,s=a._self._c||t;return s("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[s("h1",{attrs:{id:"events"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#events"}},[a._v("#")]),a._v(" Events")]),a._v(" "),s("p"),s("div",{staticClass:"table-of-contents"},[s("ul",[s("li",[s("a",{attrs:{href:"#transaction-initiated"}},[a._v("Transaction Initiated")])]),s("li",[s("a",{attrs:{href:"#transaction-successful"}},[a._v("Transaction Successful")])]),s("li",[s("a",{attrs:{href:"#transaction-failed"}},[a._v("Transaction Failed")])]),s("li",[s("a",{attrs:{href:"#transaction-invalidated"}},[a._v("Transaction Invalidated")])])])]),s("p"),a._v(" "),s("p",[a._v("Laravel PayU dispatches number of events that you can listen to, to process your transaction accordingly.")]),a._v(" "),s("h2",{attrs:{id:"transaction-initiated"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#transaction-initiated"}},[a._v("#")]),a._v(" Transaction Initiated")]),a._v(" "),s("p",[a._v("When a transaction is initiated Laravel PayU dispatches an event "),s("code",[a._v("Tzsk\\Payu\\Events\\TransactionInitiated")]),a._v(". You can create a listener for it and access the transaction instance like this,")]),a._v(" "),s("div",{staticClass:"language-php extra-class"},[s("pre",{pre:!0,attrs:{class:"language-php"}},[s("code",[a._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("class")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("TransactionInitiatedListener")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("implements")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("ShouldQueue")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("public")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("function")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("handle")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("TransactionInitiated "),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$event")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n        "),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$event")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("-")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),s("span",{pre:!0,attrs:{class:"token property"}},[a._v("transaction")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// PayuTransaction Instance")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n")])])]),s("h2",{attrs:{id:"transaction-successful"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#transaction-successful"}},[a._v("#")]),a._v(" Transaction Successful")]),a._v(" "),s("p",[a._v("When a transaction is completed with a status of "),s("code",[a._v("SUCCESSFUL")]),a._v(", Laravel PayU dispatches an event "),s("code",[a._v("Tzsk\\Payu\\Events\\TransactionSuccessful")]),a._v(". You can create a listener for it and access the transaction instance like this,")]),a._v(" "),s("div",{staticClass:"language-php extra-class"},[s("pre",{pre:!0,attrs:{class:"language-php"}},[s("code",[a._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("class")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("TransactionSuccessfulListener")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("implements")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("ShouldQueue")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("public")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("function")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("handle")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("TransactionSuccessful "),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$event")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n        "),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$event")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("-")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),s("span",{pre:!0,attrs:{class:"token property"}},[a._v("transaction")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// PayuTransaction Instance")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n")])])]),s("h2",{attrs:{id:"transaction-failed"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#transaction-failed"}},[a._v("#")]),a._v(" Transaction Failed")]),a._v(" "),s("p",[a._v("When a transaction is completed with a status of "),s("code",[a._v("FAILED")]),a._v(", Laravel PayU dispatches an event "),s("code",[a._v("Tzsk\\Payu\\Events\\TransactionFailed")]),a._v(". You can create a listener for it and access the transaction instance like this,")]),a._v(" "),s("div",{staticClass:"language-php extra-class"},[s("pre",{pre:!0,attrs:{class:"language-php"}},[s("code",[a._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("class")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("TransactionFailedListener")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("implements")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("ShouldQueue")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("public")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("function")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("handle")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("TransactionFailed "),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$event")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n        "),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$event")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("-")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),s("span",{pre:!0,attrs:{class:"token property"}},[a._v("transaction")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// PayuTransaction Instance")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n")])])]),s("h2",{attrs:{id:"transaction-invalidated"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#transaction-invalidated"}},[a._v("#")]),a._v(" Transaction Invalidated")]),a._v(" "),s("p",[a._v("When a transaction is completed with a status of "),s("code",[a._v("INVALID")]),a._v(", Laravel PayU dispatches an event "),s("code",[a._v("Tzsk\\Payu\\Events\\TransactionInvalidated")]),a._v(". You can create a listener for it and access the transaction instance like this,")]),a._v(" "),s("div",{staticClass:"language-php extra-class"},[s("pre",{pre:!0,attrs:{class:"language-php"}},[s("code",[a._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("class")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("TransactionInvalidatedListener")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("implements")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("ShouldQueue")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("public")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("function")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("handle")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("TransactionInvalidated "),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$event")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n        "),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$event")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("-")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),s("span",{pre:!0,attrs:{class:"token property"}},[a._v("transaction")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// PayuTransaction Instance")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n")])])]),s("div",{staticClass:"custom-block tip"},[s("p",{staticClass:"custom-block-title"},[a._v("Verification Event")]),a._v(" "),s("p",[a._v("When you verify a transaction through whatever means be it Manual, Queue or CRON after verification is complete it also dispatches the events depending on the Status Received from the Payu server. It can be either "),s("code",[a._v("Failed")]),a._v(" or "),s("code",[a._v("Successful")]),a._v(".")])])])}),[],!1,null,null,null);t.default=e.exports}}]);